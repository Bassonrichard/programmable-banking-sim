{
	"info": {
		"_postman_id": "ec6dc4e9-8f32-49b8-98b0-12434d424410",
		"name": "Investec Programmable Banking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get Accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/pb/v1/accounts",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"pb",
								"v1",
								"accounts"
							]
						},
						"description": "Obtain a list of accounts in associated profile."
					},
					"response": []
				},
				{
					"name": "Get Account Balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/pb/v1/accounts/:accountId/balance",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"pb",
								"v1",
								"accounts",
								":accountId",
								"balance"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "4675778129910189600000003"
								}
							]
						},
						"description": "Obtain a specified account's balance."
					},
					"response": []
				},
				{
					"name": "Get Account Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/pb/v1/accounts/:accountId/transactions",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"pb",
								"v1",
								"accounts",
								":accountId",
								"transactions"
							],
							"query": [
								{
									"key": "fromDate",
									"value": "2022-04-01",
									"description": "Refers to the date range filter's start date. Will default to today's date, minus 180 days, if not specified.",
									"disabled": true
								},
								{
									"key": "toDate",
									"value": "2022-04-15",
									"description": "Refers to the date range filter's end date. Will default to today's date if not specified.",
									"disabled": true
								},
								{
									"key": "transactionType",
									"value": "FeesAndInterest",
									"description": "Refers to the transaction type filter's value.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "accountId",
									"value": "4675778129910189600000003"
								}
							]
						},
						"description": "Obtain a specified account's transactions."
					},
					"response": []
				}
			],
			"description": "The Account Information API allows Investec SA Private Banking clients to access their account and transactional information (read-only) via an API.\n\nIt can be used to retrieve account information such as:\n\n- Account details\n- Balances\n- Account transactions\n\nThere are many possible use cases for the Account Information API: from extracting the data to aggregate it with financial data from other banking institutions to personal money management tools."
		},
		{
			"name": "Programmable Cards",
			"item": [
				{
					"name": "Get Cards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards"
							]
						},
						"description": "Obtain cards associated with the account."
					},
					"response": []
				},
				{
					"name": "Get Function (saved) code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/code",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"code"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Obtain code currently saved to the specific card."
					},
					"response": []
				},
				{
					"name": "Get Function (published) code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/publishedcode",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"publishedcode"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Obtain code currently published to the specific card."
					},
					"response": []
				},
				{
					"name": "Update Function code (Without publishing to card)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"// This function runs during the card transaction authorization flow.\\n// It has a limited execution time, so keep any code short-running.\\nconst beforeTransaction = async (authorization) => {\\n    console.log(authorization);\\n    return true;\\n};\\n\\n// This function runs after a transaction.\\nconst afterTransaction = async (transaction) => {\\n    console.log(transaction)\\n};\\n\\n// This function runs after a transaction.\\nconst afterDecline = async (transaction) => {\\n    console.log(transaction)\\n};\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/code",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"code"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Save specified code to the specific card.\nNote: This allows you to save/stage the code to the card without publishing it. This implies that the code will not execute when a card transaction occurs."
					},
					"response": []
				},
				{
					"name": "Publish Saved Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"codeid\": \"2d73122b-8beb-4faa-8256-0228ec811f72\",\n    \"code\": \" \"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/publish",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"publish"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Publish specified code to the specific card.\nNote: This will mark the saved code as the published code ready for execution. Remember to specify the {codeid} obtained from the Get Function (saved) code"
					},
					"response": []
				},
				{
					"name": "Execute Function Code (Simulation)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"simulationcode\": \"// This function runs during the card transaction authorization flow.\\n// It has a limited execution time, so keep any code short-running.\\nconst beforeTransaction = async (authorization) => {\\n    console.log(authorization);\\n    return true;\\n};\\n\\n// This function runs after a transaction.\\nconst afterTransaction = async (transaction) => {\\n    console.log(transaction)\\n};\\n\\n// This function runs after a transaction.\\nconst afterDecline = async (transaction) => {\\n    console.log(transaction)\\n};\",\n    \"centsAmount\": \"10100\",\n    \"currencyCode\": \"zar\",\n    \"merchantCode\": 7996,\n    \"merchantCity\": \"Durban\",\n    \"countryCode\": \"ZA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/code/execute",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"code",
								"execute"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Publish specified code to the specific card.\nNote: This allows you to push code to the specified card. After successfully publishing the code it will execute the next time a card transaction occurs."
					},
					"response": []
				},
				{
					"name": "Get Executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/code/executions",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"code",
								"executions"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Fetches the logs of the simulated as well as the actual transactions for the specific card"
					},
					"response": []
				},
				{
					"name": "Get Environment Variables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/environmentvariables",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"environmentvariables"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Gets the key value pairs of user defined variables securely stored against a specific card"
					},
					"response": []
				},
				{
					"name": "Replace Environment Variables Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"variables\": {\n        \"test1\": \"value11\",\n        \"test2\": \"value22\"\n        }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/za/v1/cards/:cardkey/environmentvariables",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								":cardkey",
								"environmentvariables"
							],
							"variable": [
								{
									"key": "cardkey",
									"value": "1611980"
								}
							]
						},
						"description": "Sets the environment variables stored agains a specific card.\nNote: This replaces all variables and does not allow for patching"
					},
					"response": []
				},
				{
					"name": "Countries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/countries",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								"countries"
							]
						},
						"description": "Gets a reference set of countries"
					},
					"response": []
				},
				{
					"name": "Currencies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/currencies",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								"currencies"
							]
						},
						"description": "Gets a reference set of currencies"
					},
					"response": []
				},
				{
					"name": "Merchants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{host}}/za/v1/cards/merchants",
							"host": [
								"{{host}}"
							],
							"path": [
								"za",
								"v1",
								"cards",
								"merchants"
							]
						},
						"description": "Get a reference set of merchant category codes and descriptions"
					},
					"response": []
				}
			],
			"description": "The Programmable card API API allows Investec SA Private Banking clients to access their programmable card functionality via an API."
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessTokenUrl",
				"value": "{{host}}/identity/v2/oauth2/token",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://openapi.investec.com",
			"type": "default"
		},
		{
			"key": "client_id",
			"value": "",
			"type": "default"
		},
		{
			"key": "client_secret",
			"value": "",
			"type": "default"
		}
	]
}